

☞ usedMemory1 := 0.
☞ usedMemory2 := 0.
☞ usedMemory3 := 0.
☞ usedMemory4 := 0.

Program tidiness: 0.

☞ txt := 'Word Salad'.
✎ write: ( txt from: 5 length: 5 ).
✎ write: ( txt offset: 4, remove surrounding spaces ), end.

Program clean memory.

usedMemory1 := (Program memory ? 0).


txt := 'Word Salad'.
✎ write: ( txt from: 5 length: 5 ).
✎ write: ( txt offset: 4, remove surrounding spaces ), end.

Program clean memory.
usedMemory2 := (Program memory ? 0).


txt := 'Word Salad'.
✎ write: ( txt from: 5 length: 5 ).
✎ write: ( txt offset: 4, remove surrounding spaces ), end.

Program clean memory.
usedMemory3 := (Program memory ? 0).



( usedMemory1 = usedMemory2 and: usedMemory1 = usedMemory3, and: usedMemory2 = usedMemory3 ) true: {
	✎ write: 'No memory leaks here'.
}, false: {
	✎ write: 'Leaking memory...'.
}.
