

Program tidiness: 1.

☞ x := 0.
☞ y := 'Hello'.
☞ q := {}.
☞ p := True.
☞ a := List ← 1 ; 2 ; 3 ; 4.
☞ c := Object new.
c on: 'greet:' do: { Pen write: 'greet!'. }.

☞ usedMemory1 := 0.
☞ usedMemory2 := 0.
☞ usedMemory3 := 0.
☞ usedMemory4 := 0.
☞ usedMemory5 := 0.

Program sweep.
☞ usedMemory1 := Program allocated.




x := 1.
y := 'Hello'.
q := {}.
p := True.
a := List ← 1 ; 2 ; 3 ; 5.
c := Object new.
c on: 'greet:' do: { Pen write: 'greet!'. }.


Program sweep.
☞ usedMemory2 := Program allocated.




x := 2.
y := 'Hello'.
q := {}.
p := True.
a := List ← 1 ; 2 ; 3 ; 4.
c := Object new.
c on: 'greet:' do: { Pen write: 'greet!'. }.

Program sweep.
☞ usedMemory3 := Program allocated.




x := 3.
y := 'Hello'.
q := {}.
p := True.
a := List ← 1 ; 2 ; 3 ; 5.
c := Object new.
c on: 'greet:' do: { Pen write: 'greet!'. }.
c := Object new.
c on: 'greet:' do: { Pen write: 'a different greet!', brk. }.


Program sweep.
☞ usedMemory4 := Program allocated.





x := 4.
y := 'Hello'.
q := {}.
p := True.
a := List ← 1 ; 2 ; 3 ; 4.
c := Object new.
c on: 'greet:' do: { Pen write: 'greet!'. }.


Program sweep.
☞ usedMemory5 := Program allocated.




(usedMemory1 = usedMemory2 = usedMemory3 = usedMemory4 = usedMemory5) true: { 
	Pen write: 'Memory usage remains stable.', brk.
}, else: {
	Pen write: 'Used memory not stable.', brk.
}.
