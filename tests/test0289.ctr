â˜ž Slurp := Object new.
Slurp on: 'new' do: {
	âš¿ str := ''.
}.
Slurp learn: 'nieuw' means: 'new'.
Slurp on: 'respondTo:' do: { :blah
		(âš¿ str !=: '') true: {
			âš¿ str append: ' '.
		}.
		âš¿ str append: blah.
}.
Slurp on: 'respondTo:and:' do: { :blah :blahah
		(âš¿ str !=: '') true: {
			âš¿ str append: ' '.
		}.
		(blah length > 1) true: {
			âš¿ str append: (blah from: 0 length: (blah length - 1)).
		}, else: {
			âš¿ str append: blah.
		}.
		âš¿ str append: ' '.
		âš¿ str append: blahah.
}.
Slurp on: 'obtain' do: {
	â˜ž buffer := âš¿ str.
	âš¿ str := ''.
	â†² buffer.
}.
â˜ž largeâ€‰text := ''.
1000 times: {
	largeâ€‰text append: 'hello'.
}.


âœŽ write: (
	ðŸ’» shell: (
		Slurp new
			echo: largeâ€‰text,
			| './ctr tests/assets/stdin_test.ctr'
		) obtain
).

