String on: 'escape:' do: { :characters
	☞ str := ⛏.
	characters characters each: { :number :character
		
		☞ replacement := '\\' + character factorial.
		
		(character = '\t') true: {
			replacement := '\\t'.
		}.
		
		(character = '\n') true: {
			replacement := '\\n'.
		}.
		
		str := str replace: character with: replacement.
	}.
	↲ str.
}.

String on: 'unescape:' do: { :text
	☞ str := ⛏.
	text characters each: { :number :character
		
		(character = '\t') true: {
			character := '\\t'.
		}.
		
		(character = '\n') true: {
			character := '\\n'.
		}.
		
		str := str pattern: ('\\\\+(X)' X character) process: { :match
			
			☞ special := match ? 1.
			
			((match ? 0) = '\\t') true: {
				special := '⇿'.
			}.
			
			((match ? 0) = '\\n') true: {
				special := '↵'.
			}.
			
			↲ special.
		}.
	}.
	↲ str.
}.

☞ garden := '{
	"garden": {
		"chairs": 2,
		"pool": true,
		"shed": false,
		"flower": [
			"tulips",
			"roses",
			"lillies"
		],
		"size": {
			"width":8,
			"length":15
		},
		"insects":null,
		"dog":
	}
}'.

☞ g := Json to object: garden.

✎ write: 'There are x chairs in the sunny garden.' x (g ? 'garden' ? 'chairs'), brk.
✎ write: 'A rubber duck swims in the x.' x ((g garden pool) either: 'pool' or: ''), brk.
✎ write: 'Is there a shed in the garden? Well.. x' x (g ? 'garden' ? 'shed'), brk.
✎ write: 'In the garden you smell the fragrance of x.' x ((g garden flower join: ' and ')), brk.
✎ write: 'The garden is x meters long.' x (g garden size length), brk.
✎ write: 'Luckily, this day, there are x wasps in the garden.' x (g garden insects), brk.
✎ write: 'The dog named x sleeps under the tree.' x (g garden dog), brk.

✎ write: ('a"bb"ccc"' escape: '"'), brk.
✎ write: g, brk.



✎ write: (Json jsonify: g), brk.





