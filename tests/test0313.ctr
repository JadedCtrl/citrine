#SINGLE_LANGUAGE
#Can we use JSON?

☞ garden := '{
	"garden": {
		"chairs": 2,
		"pool": true,
		"shed": false,
		"flower": [
			"tulips",
			"roses",
			"lillies"
		],
		"size": {
			"width":8,
			"length":15
		},
		"insects":null,
		"dog":
	}
}'.

☞ g := Json parse: garden.

✎ resetColor.
✎ write: 'There are ❲g @ 'garden' @ 'chairs'❳ chairs in the sunny garden.', brk.
✎ write: 'A rubber duck swims in the ❲(g garden pool) ifTrue: { ↲ 'pool'. }❳.', brk.
✎ write: 'Is there a shed in the garden? Well.. ❲g garden shed❳', brk.
✎ write: 'In the garden you smell the fragrance of ❲(g garden flower join: ' and ')❳.', brk.
✎ write: 'The garden is ❲g garden size length❳ meters long.', brk.
✎ write: 'Luckily, this day, there are ❲g garden insects❳ wasps in the garden.', brk.
✎ write: 'The dog named ❲g garden dog❳ sleeps under the tree.', brk.

✎ write: ('a"bb"ccc"' escape: '"'), brk.
✎ write: g, brk.
#✎ write: (Jsmn parse: '{"a":{"b":"c","d":"e"},"aa":"zz"}'), brk.
#✎ write: (Jsmn parse: '{"a":undefined,"b":null}'), brk.
#✎ write: (Jsmn parse: '{"a":"b","x":[1,2,3]}'), brk.
✎ write: (Json jsonify: g), brk.

#✎ write: (Map new put: (Map new put: 'hello' at: 'world', put: 'doei' at: 'holland') at: 'waarden'), brk.
#✎ write: (Jsmn jsonify: (Map new put: (Map new put: 'he"llo' at: 'greeting') at: 'world', put: (Array ← 1 ; 2 ; (Map new put: 'x' at: 9)) at: 'arr')), brk.


