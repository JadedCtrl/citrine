

☞ usedMemory1 := 0.
☞ usedMemory2 := 0.
☞ usedMemory3 := 0.
☞ usedMemory4 := 0.

Broom tidiness: 0.

☞ txt := 'World Salad'.
Pen write: 'this text contains: ' + ( ( txt split: ' ' ) count ) + ' words.', brk.
txt := txt from: 6 to: 10.
Pen write: txt, brk.

Broom sweep.

usedMemory1 := Broom keptAlloc.


txt := 'World Salad'.
Pen write: 'this text contains: ' + ( ( txt split: ' ' ) count ) + ' words.', brk.
txt := txt from: 6 to: 10.
Pen write: txt, brk.

Broom sweep.
usedMemory2 := Broom keptAlloc.


txt := 'World Salad'.
Pen write: 'this text contains: ' + ( ( txt split: ' ' ) count ) + ' words.', brk.
txt := txt from: 6 to: 10.
Pen write: txt, brk.

Broom sweep.
usedMemory3 := Broom keptAlloc.



( usedMemory1 = usedMemory2 and: usedMemory1 = usedMemory3, and: usedMemory2 = usedMemory3 ) true: {
	Pen write: 'No memory leaks here'.
}, false: {
	Pen write: 'Leaking memory...'.
}.
